RS EQU P3.7 ; RS FOR SELECTING COMMAND OR DATA REGISTER
RW EQU P3.6 ; RW FOR WRITE/ READ FROM LCD
E EQU P3.5	; ENABLE FOR WORKING LCD 
ORG 200H
	DB 38H,0EH,06H,01H,80H ; COMMANDS TO LCDINSTRUCTION REGISTER
	
	;038H FOR 2 LINES AND 5X7 MATRIX
     ;0E FOR DISPLAY ON,CURSOR BLINKING
	 ;06H FOR SHIFTING CURSOR TO RIGHT
	 ;01 FOR CLEARING DISPLAY SCREEN
	 ;80H FOR FORCING CURSOR TO BEGIN FROM 1ST LINE
	 
ORG 250H
	DB " ENTER PASSWORD" ; FOR GETTING PASSWORD FROM USER
ORG 300H
	DB " LINE1 IS CLOSED" ; FOR INDICATING  STATUS OF LINE
ORG 350H
	DB " WRONG PASSWORD"  ; FOR DISPLAYING WRONG PASSWORD
ORG 400H
	DB " LINE1 IS OPEN" ; FOR INDICATING  STATUS OF LINE
ORG 500H
	DB " WHOM TO CONTACT" ; WHICH LINE TO BE CONTROLLED

ORG 450H
KCODE1: DB '1','2','3'  ;ROW_0
KCODE2: DB '4','5','6'  ;ROW_1
KCODE3: DB '7','8','9'	;ROW_2	
KCODE4: DB '*','0','#'	;ROW_3	
ORG 00H
	MOV P2,#0FFH      ; CONFIGURE P2 AS INPUT
	MOV P1,#00H       ; CONFIGUTE P1 AS OUTPUT
	CLR P3.0          ; CONFIGURE BIT  AS OUPTUT
	MOV TMOD,01H       ; TIMER 0 MODE 1 FOR GETTING 20MS DELAY
   
	
	AGAIN19:  MOV R5,#4   	; FOR GETTING 4 DIGITS FROM KEYPAD
	 ACALL CONFIGURE   ; CONFIGURING LCD WITH REQUIRED COMMANDS
     ACALL TEXT1       ; DISPLAYING "ENTER PASSWORD" 
	 ACALL LINE2
	 
	AGAIN9: MOV R4,#1  ; FOR GETTING 1 DIGIT FROM KEYPAD FOR SPECIFIED LINE TO CONTROL
	 ACALL CONFIGURE   ; CONFIGURING LCD WITH REQUIRED COMMANDS
     ACALL TEXT1       ; DISPLAYING "ENTER PASSWORD" 
	 ACALL LINE2       ; FOR ENTERING PASSWORD IN 2ND LINE


	 
	                       ; CHECKING THE PREVIOUS KEY IS RELEASED OR NOT BY MAKING ALL ROWS '0'
  K1:CLR A      ; CLEARING A VALUE EVERYTIME AS WE ARE USING DIFFERENT VALUES OF A ACCORDINGLY
     MOV P0,#0H
	 MOV A,P2
	 
	 ANL A,#00001111B        ; MASK UNUSED BITS OF P2
	 CJNE A,#00001111B,K1  
	                         ; FOR CHECKING IF A KEY IS PRESSED OR NOT  CONTINUOSLY
  K2:CLR A
    ACALL DELAY2              ; 20MS  DEKAY FOR  AVAOIDING DEBOUNCE(AVOIDING MULTIPLE CONTACTS IF A SINGLE KEY IS PRESSED)
     MOV A,P2
	 ANL A,#00001111B
	 CJNE A,#00001111B,OVER
	 SJMP K2
	                         ;     CHECK IF KEY IS PRESSED ORELSE KEEP CHEC 
  OVER:
       ACALL DELAY2
        MOV  A,P2
		ANL A,#00001111B
	    CJNE A,#00001111B,OVER1
	    SJMP K2
   ; IF KEY IS PRESSED CORRESPONDING BIT WILL BECOME ZERO IN PORT 2 
   ; CHECKING EACH ROW FOR PRESSED KEY BY MAKING THEM ZERO FROM ROW0 TO ROW3
   
  OVER1:MOV P0,#11111110B       ; MAKING ROW_0 AS "0" FOR FINDING COLUMN
        MOV A,P2            
        ANL A,#00001111B
        CJNE A,#00001111B,ROW0  ; COMPARING P2 WITH A FOR ANY KEY IS PRESSED IN ROW0
		
		MOV P0,#11111101B       ; MAKING ROW_1 AS "0" FOR FINDING COLUMN
		MOV A,P2
		ANL A,#00001111B
	    CJNE A,#00001111B,ROW1  ; COMPARING P2 WITH A FOR ANY KEY IS PRESSED IN ROW1
		
		MOV P0,#11111011B        ; MAKING ROW_2 AS "0" FOR FINDING COLUMN
		MOV A,P2
		ANL A,#00001111B
	    CJNE A,#00001111B,ROW2   ; COMPARING P2 WITH A FOR ANY KEY IS PRESSED IN ROW2
		
		MOV P0,#11110111B        ; MAKING ROW_3 AS "0" FOR FINDING COLUMN
		MOV A,P2
		ANL A,#00001111B
	    CJNE A,#00001111B,ROW3  ; COMPARING P2 WITH A FOR ANY KEY IS PRESSED IN ROW3
		LJMP K2
		
   ROW0:MOV DPTR,#KCODE1
         SJMP FIND            
	ROW1:MOV DPTR,#KCODE2
         SJMP FIND
   ROW2:MOV DPTR,#KCODE3
         SJMP FIND
   ROW3:MOV DPTR,#KCODE4
         SJMP FIND	 
		 
	; FOR FINDING WHICH KEY IS PRESSED IN CORRESPONDING COLUMN 	 
   FIND:RRC A          ; ROTATE RIGHT CARRY FOR FINDING WHICH COLUMN
		JNC MATCH      ; JUMP IF NO CARRY IN CARRY FLAG 
        INC DPTR       ; INCREMENT DPTR VALUE FOR FINDING COLUMN
        SJMP FIND		
	    
   MATCH:CLR A
         MOVC A,@A+DPTR
		 MOV B,A         ; COPYING A TO B AS A WILL BE MADE "*" FOR DIPLAYING PASSWORD DIGIT
		 ACALL DISP1
		 ACALL DELAY3
		 ACALL DELAY3
		 ACALL DELAY3
		 ACALL DELAY3
		 MOV A,B               ; COPYING BACK A FOR COMAPRING WITH PREDEFINED PASSWORD
		 CJNE R4,#1,AGAIN15    ; FOR TAKING ONLY  1 DIGIT FROM KEYPAD FOR LINE AFTER TYPING CORRECT PASSWORD
		 CJNE A,#'1',HERE3     ; COMPARE PRESSED KEY IS 1 OR NOT
		 CLR A
		 DJNZ R5,AGAIN4          ;  DISPLAY TEXT3 IF R5 IS ZERO OR DECREASE R5 AND JUMP TO AGAIN4
		 ACALL HERE12
		 HERE3:CJNE A,#'2',HERE4    ; COMPARE PRESSED KEY IS 2 OR NOT
		 CLR A
		 DJNZ R5,AGAIN4             ;  DISPLAY TEXT3 IF R5 IS ZERO OR DECREASE R5 AND JUMP TO AGAIN4
		 ACALL HERE12
		HERE4:CJNE A,#'3',HERE5     ; COMPARE PRESSED KEY IS 3 OR NOT
		CLR A
		DJNZ R5,AGAIN4
		ACALL HERE12                 ;  DISPLAY TEXT3 IF R5 IS ZERO OR DECREASE R5 AND JUMP TO AGAIN4
		HERE5:CJNE A,#'5',HERE6      ; COMPARE PRESSED KEY IS 5 OR NOT
		CLR A
		DJNZ R5,AGAIN4               ; JUMP TO MAIN AFTER ENTERRING CORRECT PASSWORD
		LJMP MAIN
		
        AGAIN15:LJMP HERE15        ; HERE15 IN MAIN 
		
		AGAIN4:LJMP K1
		
		HERE6:DJNZ R5,AGAIN4
		
		HERE12:ACALL TEXT3         ; DISPLAY WRONG PASSWORD
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3 
		LJMP AGAIN9               ; AFTER ENTERING WRONG PASSWEOD AGAIN DIAPLAY ENTER PASSWORD & TAKE INPUT
		 
	 
	 
	 DELAY:MOV R0,#0FFH
	 L5:DJNZ R0,L5
	 RET
	 
	 
	 DELAY2:MOV TH0,#0B8H  ; 20ms delay FOR DEBOUNCE
	        MOV TL0,#02H
	        SETB TR0
		L6:JNB TF0,L6
				CLR TF0
				CLR TR0
				RET
				
	DELAY3:MOV R0,#0FFH     ; FOR CAALLING DELAY
	L9:MOV R7,#0FFH
	 L7:DJNZ R7,L7
	 DJNZ R0,L9
	 RET
		 
	  ;RS=0 RW-0 E=1 FOR GETTING COMMANDS TO LCD
	 CMD:MOV P1,A
	 CLR RS
	 CLR RW
	 SETB E
	 ACALL DELAY
	 CLR E
	 RET

;DISPLAY "*" for each digit
 DISP1:
 MOV A,#'*'
 MOV P1,A
	 SETB RS
	 CLR RW
	 SETB E
	 ACALL DELAY
	 CLR E
	 RET	
	  
	  ;RS=1 RW-0 E=1 FOR GETTING  DATA  INTO LCD
	 DISP:MOV P1,A
	 SETB RS
	 CLR RW
	 SETB E
	 ACALL DELAY
	 CLR E
	 RET
	 
	
	 
	 ;CONFIGURING LCD
	 
	 CONFIGURE:MOV DPTR,#200H
	 MOV R1,#6
	 L1:CLR A
	 MOVC A,@A+DPTR
	 ACALL CMD
	 ACALL DELAY 
	 INC DPTR
	 DJNZ R1,L1
	 RET
	 
	 ;FOR DISPLAYING IN LINE2
	 
	 LINE2:MOV A,#0EH
	 ACALL CMD
	 MOV A,#0C0H
	 ACALL CMD
	 ACALL DELAY3
	 RET
	 
	 ;FOR DISPLAYING "ENETR PASSWORD "
	 
	 TEXT1: MOV DPTR ,#250H
	 MOV R2,#15
	 L2:CLR A
	 MOVC A,@A+DPTR
	 ACALL DISP
	 ACALL DELAY
	 INC DPTR
	 DJNZ R2,L2
	 RET
	 
	 ;FOR DISPLAYING "LINE1 IS CLOSED"
	 TEXT2:
	 MOV A,#01H
	 ACALL CMD
	 ACALL DELAY
	 CLR A
	 MOV DPTR ,#300H
	 MOV R2,#16
	 HERE2:CLR A
	 MOVC A,@A+DPTR
	 ACALL DISP
	 ACALL DELAY
	 INC DPTR
	 DJNZ R2,HERE2
	 RET
	 
	 ;FOR DISPLAYING "WRONG PASSWORD"
	  TEXT3:MOV A,#01H
	 ACALL CMD
	 ACALL DELAY
	  CLR A
	 MOV DPTR ,#350H
	 MOV R2,#15
	 L4:CLR A
	 MOVC A,@A+DPTR
	 ACALL DISP
	 ACALL DELAY
	 INC DPTR
	 DJNZ R2,L4
	 RET
	 
	  ;FOR DISPLAYING "LINE1 IS OPEN"
	 TEXT4:MOV A,#01H
	 ACALL CMD
	 ACALL DELAY
	  CLR A
	 MOV DPTR ,#400H
	 MOV R2,#14
	 L3:CLR A
	 MOVC A,@A+DPTR
	 ACALL DISP
	 ACALL DELAY
	 INC DPTR
	 DJNZ R2,L3
	 RET
	 
	 ;FOR DISPLAYING "WHOM TO CONTACT"
	 TEXT5:MOV A,#01H
	 ACALL CMD
	 ACALL DELAY
	  CLR A
	 MOV DPTR ,#500H
	 MOV R2,#16
	 L11:CLR A
	 MOVC A,@A+DPTR
	 ACALL DISP
	 ACALL DELAY
	 INC DPTR
	 DJNZ R2,L11
	 RET
	 
	 
	
	MAIN:DJNZ R4,MAIN
	ACALL CONFIGURE 
	ACALL TEXT5               ; FOR GETTING "WHOM TO CONTEACT"
	ACALL LINE2               ; ENTER LINE NO. IN LINE2
	LJMP K1                    ;JUMP TO K1 FOR GETTING 1 DIGIT LINE NO.
	HERE15:CJNE A,#'1', HERE16    ; COMPARING FOR LINE1 TO BE CONTROLLED
	CPL P3.0
	JNB P3.0,AGAIN11           ; CHECK IF P3.0 IS HIGH/LOW
	ACALL TEXT2                ; DISPLAY "LINE1 IS CLOSED "  AS P3.0 IS 1
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		
		HERE16:ACALL TEXT5     ; FOR GETTING "WHOM TO CONTEACT" AFTER CLOSING LINE
	ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		
		ACALL LINE2
		LJMP K1      ; FOR GETTING LINE NO. FROM KEYPAD JUMP TO START K1
		SJMP HERE15
	AGAIN11:ACALL TEXT4   ; DISPLAY "LINE1 IS OPEN " AS P3.0 IS 0
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		ACALL DELAY3
		
	LJMP  AGAIN19       ; FOR REPEATING SAME PROCESS  JUMP TO START
	
	 END

	
